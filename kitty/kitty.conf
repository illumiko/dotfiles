# # include ~/.cache/wal/colors-kitty.conf
 include ~/dotfiles/kitty/colors/kanagawa_dargon.conf
# background  #000000
# active_tab_background #111111
# active_tab_foreground #eeeeee
# active_tab_font_style bold
# inactive_tab_background #000000
# inactive_tab_foreground #444444
# inactive_tab_font_style normal
wayland_titlebar_color #222222
//transparency
background_opacity 0.7
window_padding_width 5

// font
# font_family JetBrainsMono Nerd Font
font_family Comic Code 
# font_family Meslo LG Regular
bold_font        auto
italic_font      auto
bold_italic_font auto
font_size 14
modify_font cell_height 5px


//cursor
cursor_shape Block
cursor_beam_thickness 10
url_style curly

//shell
shell zsh

// Tabbar
# tab_separator " â”‡"
# tab_powerline_style angled
# tab_activity_symbol none
# tab_title_template "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{title}"
# tab_bar_margin bottom
# tab_bar_min_tabs 1
# tab_fade 0.25 0.5 0.75 1

// opt = alt
# map alt+p next_tab
# map alt+o previous_tab
# map alt+i new_tab
# map alt+d close_tab
// keload config
map alt+r load_config_file

// Layouts

# enabled_layouts horizontal
# the two windows are placed one above the other
# map f5 launch --location=hsplit

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side
# map f6 launch --location=vsplit

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side if the existing window is wide or
# one above the other if the existing window is tall.
# map f4 launch --location=split

# Rotate the current split, chaging its split axis from vertical to
# horizontal or vice versa
# map f7 layout_action rotate

# Move the active window in the indicated direction
map shift+up move_window up
map shift+left move_window left
map shift+right move_window right
map shift+down move_window down

# Move the active window to the indicated screen edge
map ctrl+shift+up layout_action move_to_screen_edge top
map ctrl+shift+left layout_action move_to_screen_edge left
map ctrl+shift+right layout_action move_to_screen_edge right
map ctrl+shift+down layout_action move_to_screen_edge bottom

# Switch focus to the neighboring window in the indicated direction
map ctrl+left neighboring_window left
map ctrl+right neighboring_window right
map ctrl+up neighboring_window up
map ctrl+down neighboring_window down
